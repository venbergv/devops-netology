---

_alertmanager_config_default:

  global:
    # The time after which an alert is declared resolved
    # if it has not been updated.
    resolve_timeout: 5m

  # The directory from which notification templates are read.
  templates:
    - "{{ alertmanager_templates_path }}/*.tmpl"

  route:
    # Send the alerts to the defaul-receiver
    receiver: "default-receiver"

    # How long to initially wait to send a notification for a group
    # of alerts. Allows to wait for an inhibiting alert to arrive or collect
    # more initial alerts for the same group. (Usually ~0s to few minutes.)
    group_wait: 10s

    # How long to wait before sending a notification about new alerts that
    # are added to a group of alerts for which an initial notification has
    # already been sent. (Usually ~5m or more.
    group_interval: 10s

    # How long to wait before sending a notification again if it has already
    # been sent successfully for an alert. (Usually ~3h or more).
    repeat_interval: 1h

    # The labels by which incoming alerts are grouped together. For example,
    # multiple alerts coming in for server=A and alertname=LatencyHigh would
    # be batched into a single group.
    group_by: ['alertname', 'service']

  receivers:

    - name: "default-receiver"
      webhook_configs:
        - url: "http://127.0.0.1:5001/"

  # Inhibition rules allow to mute a set of alerts given that another alert is
  # firing.
  # We use this to mute any warning-level notifications if the same alert is
  # already critical.
  inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      # Apply inhibition if the alertname is the same.
      equal: ['alertname', 'service']
