---
- name: Replace master.cnf
  template:
    src=templates/master.cnf
    dest=/etc/mysql/mysql.conf.d/master.cnf
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_user is defined
    - (mysql_replication_master | length) > 0
  notify:
    - Restart mysql

- name: Replace slave.cnf
  template:
    src=templates/slave.cnf
    dest=/etc/mysql/mysql.conf.d/slave.cnf
  when:
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0
  notify:
    - Restart mysql

- name: Ensure replication user exists on master.
  mysql_user:
    name: "{{ mysql_replication_user }}"
    host: "%"
    password: "{{ mysql_replication_user_password }}"
    priv: "*.*:REPLICATION SLAVE,REPLICATION CLIENT"
    state: present
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_user is defined
    - (mysql_replication_master | length) > 0

- name: check slave replication status
  mysql_replication:
    mode: getreplica
  register: slave
  when:
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0

- name: check master replication status
  mysql_replication:
    mode=getprimary
  delegate_to: "{{ mysql_replication_master }}"
  register: master
  when:
    - (slave.Is_Replica is defined and not slave.Is_Replica) or (slave.Is_Replica is not defined and slave is failed)
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0

- name: configure replication on the slave
  mysql_replication:
    mode: changeprimary
    primary_host: "{{ mysql_replication_master }}"
    primary_user: "{{ mysql_replication_user }}"
    primary_password: "{{ mysql_replication_user_password }}"
    primary_log_file: "{{ master.File }}"
    primary_log_pos: "{{ master.Position }}"
  when:
    - (slave.Is_Replica is defined and not slave.Is_Replica) or (slave.Is_Replica is not defined and slave is failed)
    - mysql_replication_role == 'slave'
    - mysql_replication_user is defined
    - (mysql_replication_master | length) > 0

- name: start replication
  mysql_replication:
    mode=startreplica
  when:
    - (slave.Is_Replica is defined and not slave.Is_Replica) or (slave.Is_Replica is not defined and slave is failed)
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0
